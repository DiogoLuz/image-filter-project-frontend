import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Hanken_Grotesk } from "@next/font/google";
import styles from "../styles/Home.module.scss";
import UploadImageField from "../components/UploadImageField";
import { useState } from "react";
import GreyscaleImage from "../components/GreyscaleImage";
import {
  ReactCompareSlider,
  ReactCompareSliderHandle,
} from "react-compare-slider";
import Navbar from "../components/Navbar";
import { useRouter } from "next/router";

const HG = Hanken_Grotesk({ weight: ["400", "700"], subsets: ["latin"] });

export default function Home() {
  const [imagePath, setImagePath] = useState<string>();
  const [formData, setFormData] = useState<FormData | string>();
  console.log(formData);
  const { asPath } = useRouter();
  return (
    <>
      <Head>
        <title>Image Filter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="App">
        <Navbar path={asPath} />
        <main className={styles.main}>
          {typeof formData !== "string" && typeof formData !== "undefined" ? (
            <ReactCompareSlider
              handle={
                <ReactCompareSliderHandle
                  buttonStyle={{
                    WebkitBackdropFilter: undefined,
                    backdropFilter: undefined,
                    backgroundColor: "white",
                    border: 0,
                    boxShadow: undefined,
                    color: "#444",
                  }}
                  linesStyle={{ opacity: 0.5 }}
                />
              }
              itemOne={
                <GreyscaleImage imagePath={imagePath ? imagePath : ""} />
              }
              itemTwo={
                <Image
                  alt=""
                  src={`http://localhost:5001/files/file/${
                    formData!.get("fileName")?.toString().split(".")[0]
                  }.${formData!.get("fileName")?.toString().split(".")[1]}`}
                  width={500}
                  height={500}
                ></Image>
              }
            ></ReactCompareSlider>
          ) : typeof formData === "string" ? (
            <div>{formData}</div>
          ) : (
            <div></div>
          )}

          <UploadImageField
            setImagePath={setImagePath}
            setFormData={setFormData}
          />
        </main>
      </div>
    </>
  );
}
